# name: test/sql/delta_kernel_rs/simple_with_dv.test
# description: test delta extension with deletion vector
# group: [delta]

require parquet

require delta

require-env DELTA_KERNEL_TESTS_PATH

statement ok
pragma enable_verification

query I
SELECT count(*) FROM delta_scan('${DELTA_KERNEL_TESTS_PATH}/table-with-dv-small/')
----
8

query I
SELECT count(value) FROM delta_scan('${DELTA_KERNEL_TESTS_PATH}/table-with-dv-small/')
----
8

query II
SELECT count(value), count(*) FROM delta_scan('${DELTA_KERNEL_TESTS_PATH}/table-with-dv-small/')
----
8	8

# Simplest example
query I
FROM delta_scan('${DELTA_KERNEL_TESTS_PATH}/table-with-dv-small/')
----
1
2
3
4
5
6
7
8

# With filter: ensures the deletion vector is applied properly on top of pushed down filters
query I
FROM delta_scan('${DELTA_KERNEL_TESTS_PATH}/table-with-dv-small/')
WHERE value > 3
----
4
5
6
7
8

# With filter: ensures the deletion vector is applied properly on top of pushed down filters with the file_row_number column
query II
FROM delta_scan('${DELTA_KERNEL_TESTS_PATH}/table-with-dv-small/', file_row_number=1)
WHERE value > 3
----
4	4
5	5
6	6
7	7
8	8

# With filter and a delta scan based extra constant column
query II
FROM delta_scan('${DELTA_KERNEL_TESTS_PATH}/table-with-dv-small/', delta_file_number=1)
WHERE value > 3
----
4	7
5	7
6	7
7	7
8	7

# With filter, delta-extension-originated const column, and parquet-originated const column
query III
SELECT value, parse_filename(filename), delta_file_number
FROM delta_scan('${DELTA_KERNEL_TESTS_PATH}/table-with-dv-small/', delta_file_number=1, filename=1)
WHERE value > 3
----
4	part-00000-fae5310a-a37d-4e51-827b-c3d5516560ca-c000.snappy.parquet	7
5	part-00000-fae5310a-a37d-4e51-827b-c3d5516560ca-c000.snappy.parquet	7
6	part-00000-fae5310a-a37d-4e51-827b-c3d5516560ca-c000.snappy.parquet	7
7	part-00000-fae5310a-a37d-4e51-827b-c3d5516560ca-c000.snappy.parquet	7
8	part-00000-fae5310a-a37d-4e51-827b-c3d5516560ca-c000.snappy.parquet	7

# With PRUNED filter, delta-extension-originated const column, and parquet-originated const column
query II
SELECT parse_filename(filename), delta_file_number
FROM delta_scan('${DELTA_KERNEL_TESTS_PATH}/table-with-dv-small/', delta_file_number=1, filename=1)
WHERE value > 3
----
part-00000-fae5310a-a37d-4e51-827b-c3d5516560ca-c000.snappy.parquet	7
part-00000-fae5310a-a37d-4e51-827b-c3d5516560ca-c000.snappy.parquet	7
part-00000-fae5310a-a37d-4e51-827b-c3d5516560ca-c000.snappy.parquet	7
part-00000-fae5310a-a37d-4e51-827b-c3d5516560ca-c000.snappy.parquet	7
part-00000-fae5310a-a37d-4e51-827b-c3d5516560ca-c000.snappy.parquet	7

# With PRUNED filters, delta-extension-originated const column, and parquet-originated const column
query I
SELECT delta_file_number
FROM delta_scan('${DELTA_KERNEL_TESTS_PATH}/table-with-dv-small/', delta_file_number=1, filename=1)
WHERE value > 3 and filename is not null
----
7
7
7
7
7

# Enabling the file_row_number option, but projecting it out
query I
SELECT value 
FROM delta_scan('${DELTA_KERNEL_TESTS_PATH}/table-with-dv-small/', file_row_number=1)
----
1
2
3
4
5
6
7
8
